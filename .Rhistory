ratings = read.csv("./movie_rating.csv")
head(ratings)
dim(ratings)
dim(ratings)
ratings = read.csv("./movie_rating.csv")
ratings = read.csv("./movie_rating.csv")
install.packages("ggplot2")
library(reshape2)
ratings = read.csv("./movie_rating.csv")
head(ratings)
dim(ratings)
str(ratings)
levels(ratings$critic)
levels(ratings$title)
sort(unique(ratings$rating), decreasing = F)
movie_ratings = as.data.frame(acast(ratings, title~critic, value.var = "rating"))
View(movie_ratings)
search()
library(ggplot2)
search()
find.package('devtools')
find.package('ggplot2')
installed.packages('devtools')
install.packages("devtools")
find.package('devtools')
install.packages("devtools")
library(devtools)
install.packages("devtools")
find.package('devtools')
plot(cars)
plot(cars)
age <- c(1,3,5,2,11,9,3,8,12,3)
weight <- c(4.4,5.3,7.2,5.2,8.5,7.3,6.0,10.4,10.2,6.1)
mean(weight)
sd(weight)
cor(age,weight)
cor(weight,age)
plot(age, weight)
demo()
demo
demo(Japanese)
demo(fonts)
demo(Hershey)
demo(graphics)
demo(image)
demo(persp)
demo(plotmath)
demo(colors)
demo(hclColors)
demo(glm.vr)
?help
help(help)
help.start()
help.search('get')
RSiteSearch('getwd')
apropos('getwd', mode = 'function')
data()
vignette()
vignette('getwd')
ls()
options()
history(#)
lkd
q
options()
options(digits = 3)
x = 0.324621
x
x <- runif(20)
x
summary(x)
hist(x)
q()
setwd('GitHub/hiencb/R/')
source('func.R')
plotData(c(1.2,1.3,1.3,1.5,1.6,2.3,2.6,2.8,3.0,3.5,4.8,4.9,5.2,5.3,5.5))
sink("output", append = TRUE, split = TRUE)
pdf("graph.pdf")
x = c(1.2,1.3,1.3,1.5,1.6,2.3,2.6,2.8,3.0,3.5,4.8,4.9,5.2,5.3,5.5)
x
plotData(x)
plotData(x)
jpeg("graph.jpg")
plotData(x)
library(ggplot2)
ggplot2.libPaths()
.libPaths()
library()
search()
installed.packages()
update.packages()
lm(mpg-wt, data = mtcars)
lm(mpg~wt, data = mtcars)
x =lm(mpg~wt, data = mtcars)
x
plot(x)
dev.off()
plot(x)
summary(x)
?lm
help.start()
install.packages('vcd')
help(package="vcd")
library(vcd)
Arthritis
help("Arthritis")
example("Arthritis")
data("Arthritis")
patientData <- data.frame(patientId <- c(1, 2, 3, 4), age <- c(25, 34, 28, 52), diabetes <- c("Type1", "Type2", "Type1", "Type1"), status <- c("Poor", "Improved", "Excellent", "Poor"))
patientData
patientData <- data.frame(patientId = c(1, 2, 3, 4), age = c(25, 34, 28, 52), diabetes = c("Type1", "Type2", "Type1", "Type1"), status = c("Poor", "Improved", "Excellent", "Poor"))
patientData <- data.frame(patientId = c(1, 2, 3, 4), age = c(25, 34, 28, 52), diabetes = c("Type1", "Type2", "Type1", "Type1"), status = c("Poor", "Improved", "Excellent", "Poor"))
patientData
patientData <- data.frame(patientId = c(1, 2, 3, 4), age = c(25, 34, 28, 52), diabetes = factor("Type1", "Type2", "Type1", "Type1"), status = factor("Poor", "Improved", "Excellent", "Poor"))
patientData
?factor
example("factor")
patientData <- data.frame(patientId = c(1, 2, 3, 4), age = c(25, 34, 28, 52), diabetes = factor("Type1", "Type2", "Type1", "Type1"), status = factor("Poor", "Improved", "Excellent", "Poor"))
patientData
patientData <- data.frame(patientId = c(1, 2, 3, 4), age = c(25, 34, 28, 52), diabetes = c("Type1", "Type2", "Type1", "Type1"), status = c("Poor", "Improved", "Excellent", "Poor"))
patientData
patientData$patientId
patientData$diabetes
class(patientData$diabetes)
patientData$status
patientData[2]
patientData['diabetes']
patientData[2][0]
patientData[2][1]
class(patientData[2])
patientData[2,1]
patientData[2,3]
patientData[2,2]
attach(patientData)
summary(patientId)
plot(age, status)
detach()
with(patientData, {})
with(patientData, { })
with(patientData, {
summary(diabetes)
})
attach(patientData)
summary(status)
detach()
patientData <- data.frame(patientId = c(1, 2, 3, 4), age = c(25, 34, 28, 52), diabetes = c("Type1", "Type2", "Type1", "Type1"), status = c("Poor", "Improved", "Excellent", "Poor"))
patientId
patientId = patientId = c(1, 2, 3, 4)
patientId = c(1, 2, 3, 4)
age = c(23, 45, 21, 64)
diabetes = c("Type 1", "Type 2", "Type 1", "Type 1")
status = c("Poor", "Improved", "Excellent", "Poor")
diabetes
status
typeof(diabetes)
typeof(status)
diabetes = as.factor(diabetes)
diabetes
status = as.factor(status)
status
patientData = data.frame(patientId, age, diabetes, status, row.names = patientId)
patientData
status = factor(c('Excellent', 'Poor', 'Improved', 'Poor', 'Excellent', 'Poor', 'Improved'), ordered = TRUE, levels = c('Poor', 'Improved', 'Excellent'))
status
str(patientData)
summary(patientData)
l <- list(a = c(1, 3, 5), b = 'Test', c = TRUE)
l
str(l)
l$a
l[1]
l[[1]]
x = c(3, 4, 5, 7)
x * 7
x * c(2, 9, 4, 7)
log(x)
seq(1, 20, 4)
seq(1, 21, 4)
seq(1, 21, length.out = 4)
seq(1, 21, length.out = 5)
seq(1, 21, length.out = 6)
x = list(a = 5, c = 7)
x
x$b = 20
x
str(x)
sessionInfo()
ls()
edit()
help("read.tabl")
help("read.table")
help("file")
a = data.frame(id=c(1,2,3),name=c('Henry', 'Peter', 'Jack'))
a
dput(a)
dput(a)
dput(a, file = 'a.dat')
d = dget('a.dat')
d
b = list('men', 3, TRUE)
b
dump(c("a", "b"), file = 'dump.R')
remove(a, b)
a
b
source('dump.R')
a
d
con = file('~/Tests/content.txt')
str(con)
con
lines = readLines(con, n = 20)
lines
close(con)
con
con = url('https://rmarkdown.rstudio.com/r_notebooks.html')
html = readLines(con)
close(con)
con = url('http://www.robelle.com/smugbook/regexpr.html')
html = readlines(con)
html = readLines(con)
html
str(html)
tail(html)
tail(html, n = 20)
a = c(4, 6, 3, 9, 7, 5)
a[2]
a[c(T, F, T, T)]
a < 7
a[a < 7]
b <- list(names = c('P', 'C', 'D'), values = 4:9)
b
b[1]
b[[1]]
b$names
b$values
b['names']
b[[c(1, 2)]]
b[[1]][[2]]
b$names[2]
c <- matrix(2:14, 3)
c <- matrix(2:16, 3)
c
c[1]
c[2]
c[4]
c[2, 4]
c[2,]
c[, 4]
d <- list(abc = 2:4, pui = c('a', 'b', 'c'))
d['a']
d$a
d[[a]]
d[['a', exact=FALSE]]
d$p
e <- c(7, 4, 8, 4, 8, 3, 9)
summary(e)
e <- c(7, 4, 8, 4, 8, 3, 9, NA, 5, NA)
summary(e)
bad <- is.na(e)
e[bad]
e[[bad]]
e[!bad]
a <- c(1, Na, 6, 2, NaN, 9, 3)
a <- c(1, NA, 6, 2, NaN, 9, 3)
b <- c('a', 'b', NA, 'd', 'e', NA, f)
b <- c('a', 'b', NA, 'd', 'e', NA, 'f')
complete.cases(a, b)
c <- c(TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, NA)
complete.cases(a, b, c)
myData = data.frame(a, b)
myData
myData = data.frame(a, b, c)
myData
complete.cases(myData)
good = complete.cases(myData)
myData[good, ]
x <- c(3, 4, 3, 2)
y <- c(0, 7, 2, 3)
x * y
x %*% y
y = matrix(3:6, 4)
y
x * y
x %*% y
x = matrix(2:7, 2)
y = matrix(7:12, 3)
x
y
x %*% y
